server {
	listen 80 default_server;
	listen [::]:80 default_server;

	server_name enot32.ru;

	index index.php;

	root /var/www/html;

	# Redirect request to correct update.ver file, based on nod32 user-agent version
	location ~* "^(?<file_url>/update\.ver)$" {
		root /var/www/updates;
		access_log /var/log/nginx/enot32.ru-update.log;

		if ($http_user_agent ~* "BPC (?<version>[\d]{1,2})\.") {
			set $new_location "v$version$file_url";
		}
		if (-f $document_root/$new_location) {
			return 301 $scheme://$host/$new_location;
		}
		try_files $uri =404;
	}

	location ~* ".*/update\.ver$" {
		root /var/www/updates;
		access_log /var/log/nginx/enot32.ru-update.log;
		try_files $uri =404;
	}

	location ~* ^.+\.nup$ {
		root /var/www/updates;
		access_log /var/log/nginx/enot32.ru-update.log;
		try_files $uri =404;
	}

	access_log /var/log/nginx/enot32.ru-access.log;
	error_log  /var/log/nginx/enot32.ru-error.log;

	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	location / {
		try_files $uri $uri/ =404;
	}

	location ~ \.php$ {
		try_files $uri $uri/ =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include        fastcgi_params;
		fastcgi_intercept_errors on;
	}

	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires max;
		# log_not_found off;
	}

	# Allow fpm ping and status from localhost
	location ~ ^/(fpm-status|fpm-ping)$ {
		access_log off;
		allow 127.0.0.1;
		deny all;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
		fastcgi_pass 127.0.0.1:9000;
	}
}
